/**
 * Original at https://github.com/dmonad/lib0
 *
 * Binary data constants.
 */

/**
 * n-th bit activated.
 */
export const BIT1 = 0b00000000000000000000000000000001
export const BIT2 = 0b00000000000000000000000000000010
export const BIT3 = 0b00000000000000000000000000000100
export const BIT4 = 0b00000000000000000000000000001000
export const BIT5 = 0b00000000000000000000000000010000
export const BIT6 = 0b00000000000000000000000000100000
export const BIT7 = 0b00000000000000000000000001000000
export const BIT8 = 0b00000000000000000000000010000000
export const BIT9 = 0b00000000000000000000000100000000
export const BIT10 = 0b00000000000000000000001000000000
export const BIT11 = 0b00000000000000000000010000000000
export const BIT12 = 0b00000000000000000000100000000000
export const BIT13 = 0b00000000000000000001000000000000
export const BIT14 = 0b00000000000000000010000000000000
export const BIT15 = 0b00000000000000000100000000000000
export const BIT16 = 0b00000000000000001000000000000000
export const BIT17 = 0b00000000000000010000000000000000
export const BIT18 = 0b00000000000000100000000000000000
export const BIT19 = 0b00000000000001000000000000000000
export const BIT20 = 0b00000000000010000000000000000000
export const BIT21 = 0b00000000000100000000000000000000
export const BIT22 = 0b00000000001000000000000000000000
export const BIT23 = 0b00000000010000000000000000000000
export const BIT24 = 0b00000000100000000000000000000000
export const BIT25 = 0b00000001000000000000000000000000
export const BIT26 = 0b00000010000000000000000000000000
export const BIT27 = 0b00000100000000000000000000000000
export const BIT28 = 0b00001000000000000000000000000000
export const BIT29 = 0b00010000000000000000000000000000
export const BIT30 = 0b00100000000000000000000000000000
export const BIT31 = 0b01000000000000000000000000000000
export const BIT32 = 0b10000000000000000000000000000000

// for (let i = 0; i < 32; i++) {
//   let s = `export const BIT${i}= 0b`
//   for (let j = 0; j < 32; j++)
//     s += (31 - j) === i ? '1' : '0'
//   console.log(s)
// }

/**
 * First n bits activated.
 */

export const BITS0 = 0b00000000000000000000000000000000
export const BITS1 = 0b00000000000000000000000000000001
export const BITS2 = 0b00000000000000000000000000000011
export const BITS3 = 0b00000000000000000000000000000111
export const BITS4 = 0b00000000000000000000000000001111
export const BITS5 = 0b00000000000000000000000000011111
export const BITS6 = 0b00000000000000000000000000111111
export const BITS7 = 0b00000000000000000000000001111111
export const BITS8 = 0b00000000000000000000000011111111
export const BITS9 = 0b00000000000000000000000111111111
export const BITS10 = 0b00000000000000000000001111111111
export const BITS11 = 0b00000000000000000000011111111111
export const BITS12 = 0b00000000000000000000111111111111
export const BITS13 = 0b00000000000000000001111111111111
export const BITS14 = 0b00000000000000000011111111111111
export const BITS15 = 0b00000000000000000111111111111111
export const BITS16 = 0b00000000000000001111111111111111
export const BITS17 = 0b00000000000000011111111111111111
export const BITS18 = 0b00000000000000111111111111111111
export const BITS19 = 0b00000000000001111111111111111111
export const BITS20 = 0b00000000000011111111111111111111
export const BITS21 = 0b00000000000111111111111111111111
export const BITS22 = 0b00000000001111111111111111111111
export const BITS23 = 0b00000000011111111111111111111111
export const BITS24 = 0b00000000111111111111111111111111
export const BITS25 = 0b00000001111111111111111111111111
export const BITS26 = 0b00000011111111111111111111111111
export const BITS27 = 0b00000111111111111111111111111111
export const BITS28 = 0b00001111111111111111111111111111
export const BITS29 = 0b00011111111111111111111111111111
export const BITS30 = 0b00111111111111111111111111111111
export const BITS31 = 0b01111111111111111111111111111111
export const BITS32 = 0b11111111111111111111111111111111

// for (let i = 0; i < 32; i++) {
//   let s = `export const BITS${i}= 0b`
//   for (let j = 0; j < 32; j++)
//     s += (32 - j) > i ? '0' : '1'
//   console.log(s)
// }

/*
var BIT0 = 1;
var BIT1 = 2;
var BIT2 = 4;
var BIT3 = 8;
var BIT4 = 16;
var BIT5 = 32;
var BIT6 = 64;
var BIT7 = 128;
var BIT8 = 256;
var BIT9 = 512;
var BIT10 = 1024;
var BIT11 = 2048;
var BIT12 = 4096;
var BIT13 = 8192;
var BIT14 = 16384;
var BIT15 = 32768;
var BIT16 = 65536;
var BIT17 = 131072;
var BIT18 = 262144;
var BIT19 = 524288;
var BIT20 = 1048576;
var BIT21 = 2097152;
var BIT22 = 4194304;
var BIT23 = 8388608;
var BIT24 = 16777216;
var BIT25 = 33554432;
var BIT26 = 67108864;
var BIT27 = 134217728;
var BIT28 = 268435456;
var BIT29 = 536870912;
var BIT30 = 1073741824;
var BIT31 = 2147483648;
var BITS0 = 0;
var BITS1 = 1;
var BITS2 = 3;
var BITS3 = 7;
var BITS4 = 15;
var BITS5 = 31;
var BITS6 = 63;
var BITS7 = 127;
var BITS8 = 255;
var BITS9 = 511;
var BITS10 = 1023;
var BITS11 = 2047;
var BITS12 = 4095;
var BITS13 = 8191;
var BITS14 = 16383;
var BITS15 = 32767;
var BITS16 = 65535;
var BITS17 = 131071;
var BITS18 = 262143;
var BITS19 = 524287;
var BITS20 = 1048575;
var BITS21 = 2097151;
var BITS22 = 4194303;
var BITS23 = 8388607;
var BITS24 = 16777215;
var BITS25 = 33554431;
var BITS26 = 67108863;
var BITS27 = 134217727;
var BITS28 = 268435455;
var BITS29 = 536870911;
var BITS30 = 1073741823;
var BITS31 = 2147483647;
var BITS32 = 4294967295;

*/
